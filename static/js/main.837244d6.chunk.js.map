{"version":3,"sources":["components/CustomPaper/index.js","components/CustomTableRow/index.js","containers/Notes/components/NoteList/index.js","components/CustomTextField/index.js","components/CustomButton/index.js","components/CustomSelectField/index.js","containers/Notes/components/AddNoteForm/reducer.js","constants/index.js","containers/Notes/components/AddNoteForm/index.js","containers/Notes/components/AddNoteForm/validation.js","containers/Notes/index.js","routes/index.js","components/SnackBars/index.js","app/App.js","serviceWorker.js","app/rootReducer.js","app/store.js","index.js","containers/Notes/reducer.js","containers/Notifications/reducer.js","containers/Notes/saga.js","app/rootSaga.js"],"names":["useStyles","makeStyles","theme","paper","padding","spacing","CustomPaper","children","classes","Paper","className","display","flexWrap","minHeight","width","background","position","overflow","marginBottom","margin","p20","fs18","fontSize","maxHeight","text","divider","red","color","pink","blue","green","orange","beforeContent","left","height","fr","float","actionBtn","border","borderRadius","CustomTableRow","note","editNote","deleteNote","Grid","key","id","item","xs","elevation","cx","onClick","noteText","Divider","variant","timeCreated","time","layout","marginLeft","marginRight","title","flex","root","paddingLeft","paddingRight","empty","NotesList","notes","startNoteEditing","React","useState","page","setPage","emptyRows","Math","min","length","Fragment","inputs","container","slice","map","TablePagination","component","count","rowsPerPage","rowsPerPageOptions","onChangePage","event","newPage","CustomTextField","label","value","errorMessage","props","TextField","required","error","name","fullWidth","helperText","button","CustomButton","Button","formControl","CustomSelectField","onChange","options","inputLabel","useRef","labelWidth","setLabelWidth","useEffect","current","offsetWidth","FormControl","InputLabel","ref","htmlFor","Select","native","inputProps","option","FormHelperText","initialState","reducer","state","action","type","data","Error","COLOR_OPTIONS","maxWidth","submitBtn","justifyContent","inputFields","AddNoteForm","noteToBeEdited","onSubmit","cancelNoteEditing","useReducer","dispatch","justify","input","target","errors","values","forEach","field","validateNote","Object","entries","otherState","flexGrow","mapDispatchToProps","addNote","connect","list","find","direction","sm","md","routes","path","Notes","from","to","Alert","marginTop","Snackbars","isSuccess","message","open","setClose","handleClose","reason","Snackbar","autoHideDuration","onClose","severity","matchDispatchToProps","WrappedComponent","notifications","CssBaseline","startSaga","Boolean","window","location","hostname","match","combineReducers","store","configureStore","middleware","sagaMiddleware","App","require","default","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","nextNoteId","configSlice","createSlice","loading","reducers","push","payload","prepare","moment","format","editedNote","indexOfNote","findIndex","splice","noteToBeDeleted","actions","setOpen","addNoteSaga","editNoteSaga","deleteNoteSaga","phonebookSaga","put","takeEvery","rootSaga","all","fork","notesSaga","createSagaMiddleware","run"],"mappings":"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","file":"static/js/main.837244d6.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    padding: theme.spacing(2),\n  },\n}));\n\nconst CustomPaper = ({ children }) => {\n  const classes = useStyles();\n  return (\n    <Paper className={classes.paper}>\n      {children}\n    </Paper>\n  );\n}\n\nCustomPaper.propTypes = {\n  children: PropTypes.arrayOf(PropTypes.element).isRequired,\n};\n\nexport default CustomPaper;\n","import React from 'react';\nimport cx from 'classnames'\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Divider } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    minHeight: '150px',\n    width: '100%',\n    background: 'whitesmoke',\n    position: 'relative',\n    padding: '0 8px',\n    overflow: 'hidden',\n    marginBottom: '15px',\n    '& > *': {\n      margin: theme.spacing(1),\n    }\n  },\n  p20: {\n    padding: '0 20px 10px 10px',\n  },\n  fs18: {\n    width: '100%',\n    fontSize: '18px',\n    maxHeight: '25px',\n  },\n  text: {\n    width: '100%',\n    maxHeight: '30px',\n  },\n  divider: {\n    width: '-webkit-fill-available'\n  },\n  red: {\n    color: 'red',\n  },\n  pink: {\n    color: 'pink',\n  },\n  blue: {\n    color: 'blue',\n  },\n  green: {\n    color: 'green',\n  },\n  orange: {\n    color: 'orange',\n  },\n  beforeContent: {\n    position: 'absolute',\n    left: '0',\n    width: '4px',\n    height: '100%',\n    margin: '0',\n    maxHeight: '100%',\n  },\n  'bg-red': {\n    background: 'red',\n  },\n  'bg-blue': {\n    background: 'blue',\n  },\n  'bg-green': {\n    background: 'green',\n  },\n  'bg-orange': {\n    background: 'orange',\n  },\n  'bg-pink': {\n    background: 'pink',\n  },\n  fr: {\n    float: 'right',\n  },\n  actionBtn: {\n    border: 'none',\n    borderRadius: '2px',\n    margin: '2px',\n  }\n}));\n\nconst CustomTableRow = ({ note, editNote, deleteNote }) => {\n  const classes = useStyles();\n  return (\n    <Grid key={note.id} className={classes.p20} item xs={4}>\n      <Paper className={classes.paper} elevation={3}>\n        <div className={cx(classes.beforeContent, { [classes[`bg-${note.color}`]]: note.color })}>\n        </div>\n        <div className={cx(classes.fs18, { [classes[note.color]]: note.color })} color={note.color}>\n          Note {note.id}\n          <span className={classes.fr}>\n            <button className={classes.actionBtn}>\n              <EditIcon color=\"action\" onClick={() => editNote()} />\n            </button>\n            <button className={classes.actionBtn}>\n              <DeleteIcon color=\"action\" onClick={() => deleteNote()} />\n            </button>\n          </span>\n        </div>\n        <div className={classes.text}>{note.noteText}</div>\n        <Divider className={classes.divider} variant='fullWidth' />\n        <div className={classes.text}>{note.timeCreated}</div>\n        <div >{note.time}</div>\n      </Paper>\n    </Grid>\n  );\n}\n\nCustomTableRow.propTypes = {\n  note: PropTypes.object.isRequired,\n  editNote: PropTypes.func.isRequired,\n  deleteNote: PropTypes.func.isRequired,\n};\n\nexport default CustomTableRow;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport CustomPaper from '../../../../components/CustomPaper';\nimport CustomTableRow from '../../../../components/CustomTableRow';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles(theme => ({\n  layout: {\n    width: 'auto',\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    height: 'calc(100% - 44px)',\n  },\n  title: {\n    flex: '1 1 100%',\n  },\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  empty: {\n    height: '175px',\n  }\n}));\n\nconst rowsPerPage = 6;\n\nconst NotesList = ({ notes, startNoteEditing, deleteNote }) => {\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, notes.length - page * rowsPerPage);\n  return (\n    <React.Fragment>\n      <main className={classes.layout}>\n        <CustomPaper>\n          <Grid className={classes.inputs} container spacing={0}>\n            {\n              emptyRows === 6 && <div className={classes.empty}>\n                <b> No notes found, please add notes.</b>\n              </div>\n            }\n            {notes\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              .map(note => (\n                <CustomTableRow\n                  key={note.id}\n                  note={note}\n                  editNote={() => startNoteEditing(note.id)}\n                  deleteNote={() => deleteNote([note.id])}\n                />\n              ))}\n          </Grid>\n          <TablePagination\n            component=\"div\"\n            count={notes.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            rowsPerPageOptions={[rowsPerPage]}\n            onChangePage={handleChangePage}\n          />\n        </CustomPaper>\n      </main>\n    </React.Fragment>\n  );\n}\n\nNotesList.propTypes = {\n  notes: PropTypes.array.isRequired,\n  deleteNote: PropTypes.func.isRequired,\n  startNoteEditing: PropTypes.func.isRequired,\n};\n\nexport default NotesList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\n\nconst CustomTextField = ({ id, label, value, errorMessage, ...props }) => {\n  return (\n    <TextField\n      required\n      error={!!errorMessage}\n      id={id}\n      name={id}\n      label={label}\n      value={value}\n      fullWidth\n      variant=\"outlined\"\n      helperText={errorMessage}\n      {...props}\n    />\n  );\n}\n\nCustomTextField.propTypes = {\n  id: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  value: PropTypes.string,\n  errorMessage: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default CustomTextField;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles(theme => ({\n  button: {\n    marginRight: theme.spacing(1),\n  },\n}));\n\nconst CustomButton = ({ title, onClick, color='primary' }) => {\n  const classes = useStyles();\n\n  return (\n    <Button\n      variant=\"contained\"\n      color={color}\n      onClick={onClick}\n      className={classes.button}\n    >\n      {title}\n    </Button>\n  );\n}\n\nCustomButton.propTypes = {\n  title: PropTypes.string.isRequired,\n  color: PropTypes.string,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default CustomButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Select from '@material-ui/core/Select';\nimport FormControl from '@material-ui/core/FormControl';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\n\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    width: '100%',\n  },\n}));\n\nconst CustomSelectField = ({ value, title, errorMessage, onChange, options, ...props }) => {\n  const classes = useStyles();\n  const inputLabel = React.useRef(null);\n\n  const [labelWidth, setLabelWidth] = React.useState(0);\n  React.useEffect(() => {\n    setLabelWidth(inputLabel.current.offsetWidth);\n  }, []);\n\n  return (\n    <FormControl variant=\"outlined\" className={classes.formControl} error={!!errorMessage} required >\n      <InputLabel ref={inputLabel} htmlFor={`outlined-${title}-native-simple`}>\n        {title}\n      </InputLabel>\n      <Select\n        native\n        value={value}\n        onChange={onChange}\n        labelWidth={labelWidth}\n        inputProps={{\n          name: title,\n          id: `outlined-${title}-native-simple`,\n        }}\n      >\n        <option value=\"\" />\n        { options && options.map(option => (\n          <option key={option.value} value={option.value}>{option.label}</option>\n        ))}\n      </Select>\n      <FormHelperText>{errorMessage}</FormHelperText>\n    </FormControl>\n  );\n}\n\nCustomSelectField.propTypes = {\n  value: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  errorMessage: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default CustomSelectField;\n","export const initialState = {\n  time: '',\n  noteText: '',\n  color: '',\n  error: {},\n}\n\nexport const reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'noteText':\n      return { ...state, noteText: action.data };\n    case 'color':\n      return { ...state, color: action.data };\n    case 'timeCreated':\n      return { ...state, time: action.data };\n    case 'reset':\n      return { ...state, ...action.data };\n    case 'error':\n      return { ...state, error: action.data };\n    default:\n      throw new Error();\n  }\n}\n","export const COLOR_OPTIONS = [\n  {\n    value: 'red',\n    label: 'red',\n  },\n  {\n    value: 'blue',\n    label: 'blue',\n  },\n  {\n    value: 'pink',\n    label: 'pink',\n  },\n  {\n    value: 'green',\n    label: 'green',\n  },\n]","import React, { useReducer, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { validateNote } from './validation';\nimport CustomTextField from '../../../../components/CustomTextField';\nimport CustomButton from '../../../../components/CustomButton';\nimport CustomSelectField from '../../../../components/CustomSelectField';\nimport { reducer, initialState } from './reducer';\nimport { COLOR_OPTIONS } from '../../../../constants';\n\nconst useStyles = makeStyles(theme => ({\n  layout: {\n    width: 'auto',\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n  },\n  inputs: {\n    maxWidth: '50%',\n    display: 'table',\n    margin: '20px auto',\n  },\n  submitBtn: {\n    display: 'flex',\n    justifyContent: 'center',\n  }\n}));\n\nconst inputFields = [\n  {\n    id: 'noteText',\n    label: 'Note Text',\n  },\n]\n\nconst AddNoteForm = ({ noteToBeEdited, onSubmit, cancelNoteEditing }) => {\n  const classes = useStyles();\n  \n  const [state, dispatch] = useReducer(reducer, initialState);\n  useEffect(() => {\n    dispatch({ type: 'reset', data: noteToBeEdited || initialState })\n  }, [noteToBeEdited]);\n\n  const handleOnSubmit = () => {\n    const errors = validateNote(state);\n    if (Object.entries(errors).length === 0) {\n      const { error, ...otherState } = state;\n      onSubmit(otherState);\n      dispatch({ type: 'reset', data: initialState })\n    }\n\n    dispatch({ type: 'error', data: errors })\n  }\n\n  return (\n    <React.Fragment>\n      <main className={classes.layout}>\n        <form>\n          <Grid className={classes.inputs} spacing={2} container justify='center'>\n            {\n              inputFields.map(input => (\n                <Grid key={input.id} item xs={12}>\n                  <CustomTextField\n                    id={input.id}\n                    label={input.label}\n                    value={state[input.id]}\n                    errorMessage={state.error[input.id]}\n                    onChange={event => dispatch({ type: input.id, data: event.target.value })}\n                  />\n                </Grid>\n              ))\n            }\n            <Grid item xs={12}>\n              <CustomSelectField\n                title=\"Color\"\n                value={state.color}\n                options={COLOR_OPTIONS}\n                errorMessage={state.error.color}\n                width=\"100%\"\n                onChange={event => dispatch({ type: 'color', data: event.target.value })}\n              />\n            </Grid>\n            <Grid item xs={12} className={classes.submitBtn}>\n              <CustomButton title=\"Save Note\" onClick={handleOnSubmit} />\n              {\n                noteToBeEdited && (\n                  <CustomButton\n                    title=\"Cancel\"\n                    color=\"secondary\"\n                    onClick={() => cancelNoteEditing()}\n                  />\n                )\n              }\n            </Grid>\n          </Grid>\n        </form>\n      </main>\n    </React.Fragment>\n  );\n}\n\nAddNoteForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  noteToBeEdited: PropTypes.object,\n  cancelNoteEditing: PropTypes.func.isRequired,\n};\n\nexport default AddNoteForm;\n","export const validateNote = values => {\n  const errors = {};\n  const requiredFields = [\n    'color',\n    'noteText',\n  ];\n\n  requiredFields.forEach(field => {\n    if (!values[field]) {\n      errors[field] = `Please Enter ${field}`;\n    }\n  });\n\n  return errors;\n};\n\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport NodeList from './components/NoteList';\nimport AddNoteForm from './components/AddNoteForm';\nimport { addNote, cancelNoteEditing, startNoteEditing, editNote, deleteNote } from './reducer';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n}));\n\nconst NotesDashboard = ({\n  notes,\n  addNote,\n  cancelNoteEditing,\n  startNoteEditing,\n  editNote,\n  deleteNote,\n  noteToBeEdited,\n}) => {\n  const classes = useStyles();\n\n  const onSubmit = (note) => {\n    if (noteToBeEdited) {\n      editNote(note);\n    } else {\n      addNote(note);\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <Grid container direction=\"row\">\n        <Grid item sm={12} md={12}>\n          <AddNoteForm\n            onSubmit={onSubmit}\n            noteToBeEdited={noteToBeEdited}\n            cancelNoteEditing={cancelNoteEditing}\n          />\n        </Grid>\n        <Grid item sm={12} md={12}>\n          <NodeList\n            notes={notes}\n            deleteNote={deleteNote}\n            startNoteEditing={startNoteEditing}\n          />\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nNotesDashboard.propTypes = {\n  notes: PropTypes.array.isRequired,\n  addNote: PropTypes.func.isRequired,\n  editNote: PropTypes.func.isRequired,\n  deleteNote: PropTypes.func.isRequired,\n  startNoteEditing: PropTypes.func.isRequired,\n  cancelNoteEditing: PropTypes.func.isRequired,\n  noteToBeEdited: PropTypes.object,\n};\n\nconst mapDispatchToProps = { addNote, cancelNoteEditing, startNoteEditing, editNote, deleteNote };\n\nconst mapStateToProps = (state) => {\n  return {\n    notes: state.notes.list,\n    noteToBeEdited: state.notes.list.find(note => note.id === state.notes.editNote),\n  }\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(NotesDashboard);\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom';\nimport Notes from '../containers/Notes';\n\nconst routes = (\n  <Router>\n    <Route path=\"/\" component={Notes} />\n    <Redirect from=\"/*\" to=\"/\" />\n  </Router>\n);\n\nexport default routes;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { makeStyles } from '@material-ui/core/styles';\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nconst Snackbars = ({ isSuccess, message, open, setClose }) => {\n  const classes = useStyles();\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setClose();\n  };\n\n  return (\n    <div className={classes.root}>\n      <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={ isSuccess ? 'success' : 'error' }>\n         {message}\n        </Alert>\n      </Snackbar>\n    </div>\n  );\n}\n\nSnackbars.propTypes = {\n  setClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  message: PropTypes.string.isRequired,\n  isSuccess: PropTypes.bool.isRequired,\n};\n\nexport default Snackbars;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport routes from '../routes';\nimport { startSaga } from './rootSaga';\nimport Snackbars from '../components/SnackBars';\nimport { setClose } from '../containers/Notifications/reducer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nconst App = (props) => (\n  <React.Fragment>\n    <CssBaseline />\n    <Snackbars { ...props.notifications} setClose={props.setClose} />\n      {routes}\n  </React.Fragment>\n)\n\nconst matchDispatchToProps = {\n  setClose,\n};\n\nconst mapStateToProps = (state) => ({\n  notifications: state.notifications,\n});\n\nconst WrappedComponent = connect(mapStateToProps, matchDispatchToProps)(App);\n\nexport default () => {\n  startSaga();\n  return <WrappedComponent />\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from 'redux';\nimport notes from '../containers/Notes/reducer';\nimport notifications from '../containers/Notifications/reducer';\n\nexport default combineReducers({ \n  notes,\n  notifications, \n});","import { configureStore } from \"@reduxjs/toolkit\";\nimport sagaMiddleware from './rootSaga';\nimport reducer from './rootReducer';\n\nconst store = configureStore({\n  reducer,\n  middleware: [ sagaMiddleware ],\n});\n\nif (process.env.NODE_ENV === 'development' && module.hot) {\n  module.hot.accept('./rootReducer', () => {\n    const newRootReducer = require('./rootReducer').default\n    store.replaceReducer(newRootReducer)\n  });\n};\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport 'typeface-roboto';\nimport store from './app/store';\n\nconst render = () => {\n  const App = require('./app/App').default\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById('root')\n  )\n}\n\nrender()\nserviceWorker.unregister();\n","import { createSlice } from '@reduxjs/toolkit'\nimport moment from 'moment';\n\nlet nextNoteId = 0;\n\nconst configSlice = createSlice({\n  name: 'notes',\n  initialState: {\n    error: null,\n    loading: false,\n    list: [],\n    editNote: '',\n  },\n  reducers: {\n    addNote: {\n      reducer(state, action) {\n        state.list.push(action.payload);\n      },\n      prepare(note) {\n        return { \n          payload: { \n            ...note, \n            id: nextNoteId++, \n            timeCreated: moment().format('LLL'), \n          } \n        }\n      }\n    },\n    startNoteEditing(state, action) {\n      state.editNote = action.payload;\n    },\n    cancelNoteEditing(state) {\n      state.editNote = '';\n    },\n    editNote(state, action) {\n      const editedNote = action.payload;\n      const indexOfNote = state.list.findIndex(note => note.id === editedNote.id);\n      state.list.splice(indexOfNote, 1, editedNote);\n      state.editNote = '';\n    },\n    deleteNote(state, action) {\n      const noteToBeDeleted = action.payload;\n      const indexOfNote = state.list.findIndex(note => note.id === noteToBeDeleted);\n      state.list.splice(indexOfNote, 1);\n    }\n  }\n})\n// Extract the action creators object and the reducer\nconst { actions, reducer } = configSlice;\n// Extract and export each action creator by name\nexport const { \n  addNote,\n  startNoteEditing, \n  cancelNoteEditing, \n  editNote, \n  deleteNote, \n} = actions;\n// Export the reducer, either as a default or named export\nexport default reducer;\n","import { createSlice } from '@reduxjs/toolkit'\n\nconst configSlice = createSlice({\n  name: 'notifications',\n  initialState: {\n    open: false,\n    message: '',\n    isSuccess: false,\n  },\n  reducers: {\n    setOpen(state, action) {\n      state.open = true;\n      state.message = action.payload.message;\n      state.isSuccess = action.payload.isSuccess;\n    },\n    setClose(state) {\n      state.open = false;\n    },\n  }\n})\n\nconst { actions, reducer } = configSlice;\n\nexport const { setOpen, setClose } = actions;\n\nexport default reducer;\n","import { put, takeEvery } from 'redux-saga/effects';\nimport { addNote, editNote, deleteNote } from './reducer';\nimport { setOpen } from '../Notifications/reducer';\n\nfunction* addNoteSaga() {\n  yield put(setOpen({ message: 'Note Successfully Added!', isSuccess: true }));\n}\n\nfunction* editNoteSaga() {\n  yield put(setOpen({ message: 'Note Successfully Edited!', isSuccess: true }));\n}\n\nfunction* deleteNoteSaga() {\n  yield put(setOpen({ message: 'Notes Successfully Deleted!', isSuccess: true }));\n}\n\nfunction* phonebookSaga() {\n  yield takeEvery(addNote.type, addNoteSaga);\n  yield takeEvery(editNote.type, editNoteSaga);\n  yield takeEvery(deleteNote.type, deleteNoteSaga);\n}\n\nexport default phonebookSaga;\n","import createSagaMiddleware from 'redux-saga';\nimport { all, fork } from 'redux-saga/effects';\nimport notesSaga from '../containers/Notes/saga';\n\nfunction* rootSaga() {\n  yield all(\n    [ \n      fork(notesSaga),\n    ]\n  );\n};\n\nconst sagaMiddleware = createSagaMiddleware();\n\nexport const startSaga = () => {\n  sagaMiddleware.run(rootSaga);\n};\n\nexport default sagaMiddleware;\n"],"sourceRoot":""}